import unittest

from PPI import *
import numpy as np


class TestPPI(unittest.TestCase):
    def test_amplitudes(self):
        a = [0.1, 0.2, 0.3, 0.4, 0.1, 0.8, -0.5, 0]
        np.allclose([0.1, 0.1, 0.1, 0.3, 0.7, 1.3, 0.5], PPI.get_amplitudes(a))

    def test_ppi(self):
        all = [0.1, 0.2, 0.3, 0.4, 0.1, 0.8, -0.5, 0]
        filtered = [0.3, 0.4, 0.1, 0.8]
        np.allclose([0.1, 0.1, 0.1, 0.3, 0.7, 1.3, 0.5], PPI.get_amplitudes(all))
        np.allclose([0.1, 0.3, 0.7], PPI.get_amplitudes(filtered))
        self.assertEqual(0.44285714285714295, np.average(PPI.get_amplitudes(all)))
        self.assertEqual(0.3666666666666667, np.average(PPI.get_amplitudes(filtered)))

        ppi = (0.3666666666666667 - 0.44285714285714295) / 0.3666666666666667

        self.assertEqual((0.3666666666666667, 0.44285714285714295, ppi), PPI.get_ppi(all, filtered))

    def test_one_gravity_data(self):
        self.assertEqual(100.02788351622755, PPI.parse_one_gravity_data(bytearray([0x0D, 0x0A, 0x00, 0x00])))
        self.assertEqual(101.19416276437633, PPI.parse_one_gravity_data(bytearray([0x2B, 0x0A, 0x00, 0x00])))

    def test_gravity_data(self):
        data = bytearray(
            [0xAA, 0x4A, 0x4C, 0x7C, 0x00, 0x85, 0x10, 0x00, 0x01,
             0x10, 0x0A, 0x00, 0x00,
             0x2B, 0x0A, 0x00, 0x00,
             0x10, 0x0A, 0x00, 0x00,
             0x2E, 0x0A, 0x00, 0x00,
             0x18, 0x0A, 0x00, 0x00,
             0x27, 0x0A, 0x00, 0x00,
             0x0A, 0x0A, 0x00, 0x00,
             0x29, 0x0A, 0x00, 0x00,
             0x13, 0x0A, 0x00, 0x00,
             0x2C, 0x0A, 0x00, 0x00,
             0x12, 0x0A, 0x00, 0x00,
             0x1D, 0x0A, 0x00, 0x00,
             0x16, 0x0A, 0x00, 0x00,
             0x20, 0x0A, 0x00, 0x00,
             0x15, 0x0A, 0x00, 0x00,
             0x1B, 0x0A, 0x00, 0x00,
             0x1D, 0x0A, 0x00, 0x00,
             0x1E, 0x0A, 0x00, 0x00,
             0x14, 0x0A, 0x00, 0x00,
             0x18, 0x0A, 0x00, 0x00,
             0x1B, 0x0A, 0x00, 0x00,
             0x20, 0x0A, 0x00, 0x00,
             0x1A, 0x0A, 0x00, 0x00,
             0x1E, 0x0A, 0x00, 0x00,
             0x1C, 0x0A, 0x00, 0x00,
             0x14, 0x0A, 0x00, 0x00,
             0x20, 0x0A, 0x00, 0x00,
             0x1D, 0x0A, 0x00, 0x00,
             0x21, 0x0A, 0x00, 0x00,
             0x11, 0x0A, 0x00, 0x00]
        )
        self.assertEqual([100.14451144104243, 101.19416276437633], PPI.parse_gravity_data(data)[0:2])


if __name__ == '__main__':
    unittest.main()
